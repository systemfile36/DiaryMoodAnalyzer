plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2' //스프링부트 플러그인
    id 'io.spring.dependency-management' version '1.1.0' //의존성 관리용
}

group = 'org'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17' //컴파일 시 사용할 버전

//의존성을 받을 저장소
repositories {
    mavenCentral()
}

//필요한 기능들의 의존성 목록
dependencies {
    // Default Spring MVC framework
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // For using SLF4J + Logback
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // For using AOP Logging
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Test framework
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Thymeleaf template engine
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //WebClient 사용하기 위해 WebFlux 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // JavaMail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    runtimeOnly 'com.h2database:h2' //임베디드 인메모리 데이터베이스 H2
    compileOnly 'org.projectlombok:lombok' //코드 단순화를 위한 Lombok
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-security' //스프링 시큐리티

    implementation 'io.jsonwebtoken:jjwt:0.9.1' //자바용 JWT 라이브러리; For using JWT
    implementation 'javax.xml.bind:jaxb-api:2.3.1' //XML과 자바 매핑 자동화; For using objectMapper
}

test {
    useJUnitPlatform()
}